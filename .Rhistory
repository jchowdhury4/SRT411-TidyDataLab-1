load("C:/Users/Owner/Desktop/SRT411/ch03/.RData")
library(swirl)
swirl()
buy()
bye()
swirl
swirl()
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
bye()
clear
install.packages("swirl")
swirl
library("swirl")
swirl()
swirl()
exit
exit()
bye()
install.packages("ggplot2")
library(ggplot2)
set.seed(1492)
test.df = data.frame(var1=rnorm(5000))
ggplot(data=test.df) + geom_histogram(aes(x=var1))
clear
swirl()
library(swirl)
swirl()
nxt()
pollution
head(pollution)
dim(pollution)
summary(pollution$pm25)
ppm
quantile(ppm)
boxplot(ppm, col="blue")
abline(h = 12)
hist(ppm, col="green")
rug(ppm)
low
high
hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, col = "green")
abline(v = 12, lwd = 2)
abline(v = median(ppm))
abline(v = median(ppm), col = "magenta", lwd = 4)
names(pollution)
table(pollution$region)
reg <- table(pollution$region)
reg
barplot(reg, col col = "wheat", main = "Number of Counties in Each Region")
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(data = pollution, y ~ x)
boxplot(pm25 ~ region, data = pollution, col = "red")
par(mfrowc(2,1), mar = c(4,4,2,1))
par(mfrow = c(2,1), mar = c(4,4,2,1))
subset(pollution, region == "east")
east <- subset(pollution, region == "east")
head(east)
hist(east$pm25, col = "green")
hist(subset(pollution, region == "west"))
hist(subset(pollution, region == "west")$pm25, col = "green")
help()
bye()
swirl()
bye()
exit
bye()
exit()
swirl()
library(swirl)
swirl()
bye()
swirl()
swirl()
swirl
swirl()
library(swirl)
swirl()
main()
swirl()
swirl()
swirl()
library(swirl)
ls()
rm(list=ls())
swirl()
swirl()
str(mpg)
qplot(displ, hwy, mpg)
qplot(mpg$displ, mpg$hwy, mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = drv)
bye()
swirl()
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
library(swirl)
install.packages(c("dplyr", "tidyr", "readr", "ggplot2", "lsr", "psych"))
install.packages(c("dplyr", "tidyr", "readr", "ggplot2", "lsr", "psych"))
install.packages(c("dplyr", "tidyr", "readr", "ggplot2", "lsr", "psych"))
install.packages(c("dplyr", "tidyr", "readr", "ggplot2", "lsr", "psych"))
install.packages(c("dplyr", "tidyr", "readr", "ggplot2", "lsr", "psych"))
install.packages(c("dplyr", "tidyr", "readr", "ggplot2", "lsr", "psych"))
install.packages(c("dplyr", "tidyr", "readr", "ggplot2", "lsr", "psych"))
install.packages(c("dplyr", "tidyr", "readr", "ggplot2", "lsr", "psych"))
install.packages(c("dplyr", "tidyr", "readr", "ggplot2", "lsr", "psych"))
install.packages(c("dplyr", "tidyr", "readr", "ggplot2", "lsr", "psych"))
install.packages(c("dplyr", "tidyr", "readr", "ggplot2", "lsr", "psych"))
install.packages(c("dplyr", "tidyr", "readr", "ggplot2", "lsr", "psych"))
install.packages(c("dplyr", "tidyr", "readr", "ggplot2", "lsr", "psych"))
knitr::opts_chunk$set(echo = TRUE)
#load the following packages: lsr, psych
library(lsr)
library(psych)
#load the driving.Rdata file.
load("driving.Rdata")
#type head( driving ) to look at the first few observations
head(driving)
#compute the mean age of the participants
mean(driving$age)
#compute the median age of the participants
median(driving$age)
#compute the modal age of the participants
modeOf(driving$age)
maxFreq(driving$age)
#compute the standard deviation age of the participants
sd(driving$age)
#compute the age range of the participants
range(driving$age)
#compute the interquartile range on the age of the participants
IQR(driving$age)
#compute the 10th, 25th, 75th and 90th percentiles for age
quantile(driving$age, probs = c(.1, .25, .75, .9))
#use table() to construct a tabulation of the distractor varible
table(driving$distractor)
#now use table() to cross-tabulate distractor by peak.hour
table(driving$distractor, driving$peak.hour)
#use xtabs() to cross-tabulate distractor by peak.hour
xtabs(formula = ~ distractor + peak.hour, data = driving)
#use describe to get descriptives for all variables in driving
describe(driving)
#use summary to get descriptives for all variables in driving
summary(driving)
#use describeBy to get descriptives separately depending on whether the tests were conducted in peak hour or not
describeBy(driving, group = driving$peak.hour)
#use aggregate to calculate the mean number of errors in the first test (i.e. errors_time1) broken down by peak.hour and distractor
aggregate(formula = errors_time1 ~ peak.hour + distractor, data = driving, FUN = mean)
#calculate the correlation of the number of errors at time 1 with the number of errors at time 2 using cor()
cor(driving$errors_time1, driving$errors_time2)
#calculate the Spearman correlation for the same variables, again using cor()
cor(driving$errors_time1, driving$errors_time2, method = "spearman")
#use correlate() to compute all pairwise correlations
install.packages("swirl")
library(swirl)
library("swirl")
library('swril')
library('swirl')
install.packages("swirl")
setwd("~/Class Notes and Assignments/SRT411/SRT411-TidyDataLab-1/")
install.packages("swirl")
library(swirl)
swirl()
swirl()
install.packages("swirl")
swirl()
install.packages("SparseM")
install.packages("SparseM")
